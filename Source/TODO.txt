Main.cpp:
    Add command line for MIDI stuff
    --help
    check argument ranges

GPExperiment.cpp:
    Pass time-varying variables to evaluate()
    fill and use sampleTimes for efficiency
    do TODOs

GPNetwork.cpp:
    Add new syntax parsing to string parser
    
GPSynth.cpp:
    Fill in selectFromEvaluated() skeleton code including greedy over
    Implement other types of reproduction
    do TODOs
    maybe remove rawFitness container

Node subclasses:
    DelayNode
    FilterNode
    ADSRNode
    ConditionalNode
    maybe extend parity possibilities to make for better time-varying filters
    consider changing evaluate to return floats as well as all GPFUNCTIONS... (float) double efficiency?

Interactive:
    10 networks, 4 or 5 faders, one keyboard
    Button to interactively suboptimize constants
    Ability to edit network test and add things like PITCHBEND
    Introduce Novelty button
    Buttons to step backwards through evolution
    button to run random evolution for a while

Thoughts and Ideas:
    crossover at shallower nodes have different probabilities? (exponentially distribute crossover point selection depth)
    novelty search of new spectrum elements

TODO Soon:
    GPParams could use some cleaning, filterNodeBuffer/noiseNodeBuffer/etc?
    Add weight calculation to spectrum fitness function
    test and finish implementing GPMutatableParams stuff
    add in OPEN BEAGLE stuff or self made GA for suboptimization
