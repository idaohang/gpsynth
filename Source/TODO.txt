Main.cpp:
    Add command line for MIDI stuff
    Add command line for all GPParams
    --help
    check argument ranges

GPExperiment.cpp:
    Pass time-varying variables to evaluate()
    fill and use sampleTimes for efficiency
    do TODOs

GPNetwork.cpp:
    Add new syntax parsing to string parser
    
GPSynth.cpp:
    Fill in selectFromEvaluated() skeleton code including greedy over
    Implement other types of reproduction
    do TODOs
    maybe remove rawFitness container

Node subclasses:
    DelayNode
    ADSRNode
    ConditionalNode
    consider changing evaluate to return floats as well as all GPFUNCTIONS... (float) double efficiency?

Interactive:
    10 networks, 4 or 5 faders, one keyboard
    Button to interactively suboptimize constants
    Ability to edit network test and add things like PITCHBEND
    Introduce Novelty button
    Buttons to step backwards through evolution
    button to run random evolution for a while

Thoughts and Ideas:
    crossover at shallower nodes have different probabilities? (exponentially distribute crossover point selection depth)
    novelty search of new spectrum elements
    better silence detection. evaluateBlock could return bool representing silence or I could find a filter that produces silence output for silence input or i could not worry about it due to ERC or I could do something with a sort of silence threshold per frame to trigger the penalty fitness
    evaluateBlock scale constant for nodes that produce guaranteed envelopes (ADSR, OscilNodes)?
    add in OPEN BEAGLE stuff or self made GA for suboptimization
    human readable toString vs full detail toString

TODO Soon:
    extend parity possibilities to make for better time-varying filters
    Add weight calculation to spectrum fitness function/improve fitness function/do something with DC offset
